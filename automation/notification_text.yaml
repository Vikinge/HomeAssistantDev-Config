#################################################################
## Text Notification Automations
#################################################################

        ##########################################################
        ## Pushbullet - Notification Test
        ##########################################################

- alias: notification text test
  trigger:
    - platform: state
      entity_id: input_boolean.test_text_notification
      from: 'off'
      to: 'on'
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: "This is a test."
    - service: homeassistant.turn_off
      entity_id: input_boolean.test_text_notification

        ##########################################################
        ## Pushbullet - Life360 Overdue Update
        ##########################################################

- alias: notification life360 overdue update
  trigger:
    - platform: event
      event_type: device_tracker.life360_update_overdue
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: >
          Update for {{
            state_attr(trigger.event.data.entity_id, 'friendly_name')
          }} is overdue.

- alias: notification life360 update restored
  trigger:
    platform: event
    event_type: device_tracker.life360_update_restored
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: >
          Update for {{
            state_attr(trigger.event.data.entity_id, 'friendly_name')
          }} restored after {{ trigger.event.data.wait }}.

        ##########################################################
        ## Pushbullet - SSL Expiration < 10
        ##########################################################

- alias: notification text ssl expiration 10 days
  trigger:
    - platform: numeric_state
      entity_id: sensor.ssl_cert_expiration
      below: 11
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: "SSL expiring in {{ states.sensor.ssl_cert_expiration.state }} days!"

        ##########################################################
        ## Pushbullet - Low Battery Alert
        ##########################################################

- alias: notification text low battery alert
  initial_state: 'on'
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '18:00:00'
  condition:
    condition: template
    value_template: >
          {% macro battery_level() %}
          {%- set threshold = 10 -%}
          {% set domains = ['sensor'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if (("battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if "battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() |trim != "" }}
  action:
    - service: notify.pushbullet
      data_template:
        title: "Home Assistant"
        message: >
          {% macro battery_level() %}
          {%- set threshold = 10 -%}
          {% set domains = ['sensor'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if (("battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if "battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}%){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() }}
    - service: persistent_notification.create
      data_template:
        title: Low Battery
        message: >
          {% macro battery_level() %}
          {%- set threshold = 10 -%}
          {% set domains = ['sensor'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if (("battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if "battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}%){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() }}
        notification_id: low-battery-alert

        ##########################################################
        ## Failed Login
        ##########################################################

- alias: notification failed login
  trigger:
    platform: template
    value_template: "{{ states('persistent_notification.httplogin') != 'unknown' }}"
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: "Failed Home Assistant login!"

        ##########################################################
        ## New version of Home Assistant
        ##########################################################

- alias: notification new version of home assistant
  trigger:
    - platform: state
      entity_id: sensor.current_ha_release
  action:
    - service: notify.pushbullet
      data:
        title: "New Home Assistant Release"
        message: "Home Assistant {{ states.sensor.current_ha_release.state }} is now available."

        ##########################################################
        ## Notify if Nest has gone into Away Mode
        ##########################################################

- alias: notification nest has gone into away mode
  trigger:
    - platform: state
      entity_id: sensor.downstairs_thermostat_away_mode
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: sensor.upstairs_thermostat_away_mode
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: sensor.downstairs_thermostat_away_mode
      state: 'on'
    - condition: state
      entity_id: sensor.upstairs_thermostat_away_mode
      state: 'on'
    - condition: state
      entity_id: input_boolean.wfh_mode
      state: 'off'
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: "Nests have entered away mode"

        ##########################################################
        ## Notify if Nest has gone into Home Mode
        ##########################################################

- alias: notification nest has gone into home mode
  trigger:
    - platform: state
      entity_id: sensor.downstairs_thermostat_away_mode
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: sensor.upstairs_thermostat_away_mode
      from: 'on'
      to: 'off'
  condition:
    - condition: state
      entity_id: sensor.downstairs_thermostat_away_mode
      state: 'off'
    - condition: state
      entity_id: sensor.upstairs_thermostat_away_mode
      state: 'off'
    - condition: state
      entity_id: input_boolean.wfh_mode
      state: 'off'
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: "Nests have exited away mode"

        ##########################################################
        ## Notify if critical device goes offline
        ##########################################################

- alias: notification alert when a critical device goes offline
  trigger:
#    - platform: state
#      entity_id: binary_sensor.synology_nas
#      to: 'off'
#      for:
#        minutes: 10
    - platform: state
      entity_id: binary_sensor.qnap_nas
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.hue_hub
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.harmony_hub
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.master_harmony_hub
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.sonos_chalkboard
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.sonos_den
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.sonos_kitchen
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.sonos_office
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.ring_pro
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.opensprinkler_pi
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.upstairs_thermostat_online
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.downstairs_thermostat_online
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.baby_camera
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.living_camera
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.chalkboard_camera
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.garage_camera
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.shop_camera
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.back_yard_camera
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.nginx_status
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.pihole
      to: 'off'
      for:
        minutes: 10
#    - platform: state
#      entity_id: binary_sensor.powerline_wifi
#      to: 'off'
#      for:
#        minutes: 10
    - platform: state
      entity_id: binary_sensor.deluge_process
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.killswitch_process
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.emby_process
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.media_center_r_yeestrip
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.media_center_l_yeestrip
      to: 'off'
      for:
        minutes: 10
#    - platform: state
#      entity_id: binary_sensor.wemo_mini_cactus
#      to: 'off'
#      for:
#        minutes: 10
    - platform: state
      entity_id: binary_sensor.octopi
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.cactus
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.media_lamp
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.unifi_usg
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.unifi_sw8_60w
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.unifi_ap_loft
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.unifi_ap_chalkboard
      to: 'off'
      for:
        minutes: 10
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {% if states.automation.notification_alert_when_a_critical_device_goes_offline.last_triggered is not none %}
            {% if as_timestamp(now()) | int   -  as_timestamp(states.automation.notification_alert_when_a_critical_device_goes_offline.attributes.last_triggered) | int > 3600 %} true {% else %} false
            {% endif %}
          {% else %}
          false
          {% endif %}
  action:
    - service: notify.pushbullet
      data_template:
        title: "Home Assistant"
        message: '{{trigger.to_state.attributes.friendly_name}} has gone offline.'

        ##########################################################
        ## Garage Door - Left it open
        ##########################################################

- alias: notification garage door left it open
  trigger:
    - platform: state
      entity_id: group.household
      to: 'not_home'
  condition:
    - condition: state
      entity_id: binary_sensor.ecolink_tilt_big_garage_sensor
      state: 'on'
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: "Come back, the garage door is open!"

        ##########################################################
        ## Garage Door - Open and no one home
        ##########################################################

- alias: notification garage door open and no one is home
  trigger:
    - platform: state
      entity_id: binary_sensor.ecolink_tilt_big_garage_sensor
      to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.garage_notification
      state: 'on'
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: "The garage door is open and noone is home!"

        ##########################################################
        ## Garage Door - Open for 30 minutes
        ##########################################################

- alias: notification garage open for 30min
  trigger:
    - platform: state
      entity_id: binary_sensor.ecolink_tilt_big_garage_sensor
      to: 'on'
      for:
        minutes: 30
  condition:
    - condition: state
      entity_id: group.household
      state: 'home'
    - condition: state
      entity_id: binary_sensor.garage_occupancy_on
      state: 'off'
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: "The garage door has been open for 30 minutes."

        ##########################################################
        ## AirVisual - Pollution Level Change
        ##########################################################

- alias: notification airvisual pollution level change
  trigger:
    - platform: state
      entity_id: sensor.u_s_air_pollution_level
      to: 'Good'
    - platform: state
      entity_id: sensor.u_s_air_pollution_level
      to: 'Moderate'
    - platform: state
      entity_id: sensor.u_s_air_pollution_level
      to: 'Unhealthy for Sensitive Groups'
    - platform: state
      entity_id: sensor.u_s_air_pollution_level
      to: 'Unhealthy'
    - platform: state
      entity_id: sensor.u_s_air_pollution_level
      to: 'Very unhealthy'
    - platform: state
      entity_id: sensor.u_s_air_pollution_level
      to: 'Hazardous'
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: "AirVisual pollution level has change to {{ states.sensor.u_s_air_pollution_level.state }}! The new Air Quality Index (AQI) is {{ states.sensor.u_s_air_quality_index.state }}. The main pollutant is {{ states.sensor.u_s_main_pollutant.state }}."
